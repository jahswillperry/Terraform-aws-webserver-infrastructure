provider "aws" {
  region = "us-east-1" # Replace with your desired region
}

terraform {
  backend "s3" {
    bucket         = "your-unique-tf-state-bucket-name"
    key            = "webserver-app/terraform.tfstate" # Unique key for this set of resources
    region         = "us-east-1" # Replace with your desired region
    dynamodb_table = "your-unique-tf-state-lock-table"
    encrypt        = true
  }
}

resource "aws_cloudwatch_metric_alarm" "high_cpu_alarm" {
  alarm_name          = "high-cpu-alarm"
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods  = "1"
  metric_name         = "CPUUtilization"
  namespace           = "AWS/EC2"
  period              = "60"
  statistic           = "Average"
  threshold           = "80"
  alarm_description   = "Alarm when CPU utilization is high"
  alarm_actions       = [aws_sns_topic.notification_topic.arn]
  dimensions = {
    AutoScalingGroupName = aws_autoscaling_group.webserver_asg.name
  }
}

resource "aws_cloudwatch_metric_alarm" "low_cpu_alarm" {
  alarm_name          = "low-cpu-alarm"
  comparison_operator = "LessThanOrEqualToThreshold"
  evaluation_periods  = "1"
  metric_name         = "CPUUtilization"
  namespace           = "AWS/EC2"
  period              = "60"
  statistic           = "Average"
  threshold           = "50"
  alarm_description   = "Alarm when CPU utilization is low"
  alarm_actions       = [aws_sns_topic.notification_topic.arn]
  dimensions = {
    AutoScalingGroupName = aws_autoscaling_group.webserver_asg.name
  }
}

resource "aws_autoscaling_policy" "scale_out_policy" {
  name                   = "scale-out-policy"
  adjustment_type        = "ChangeInCapacity"
  scaling_adjustment     = 1
  cooldown               = 300
  autoscaling_group_name = aws_autoscaling_group.webserver_asg.name
}

resource "aws_autoscaling_policy" "scale_in_policy" {
  name                   = "scale-in-policy"
  adjustment_type        = "ChangeInCapacity"
  scaling_adjustment     = -1
  cooldown               = 300
  autoscaling_group_name = aws_autoscaling_group.webserver_asg.name
}
